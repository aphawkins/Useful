Useful.Security.Cryptography.MonoAlphabeticSettingsViewModel
Useful.Security.Cryptography.MonoAlphabeticSettingsViewModel.CharacterSet.get -> string!
Useful.Security.Cryptography.MonoAlphabeticSettingsViewModel.MonoAlphabeticSettingsViewModel(Useful.Security.Cryptography.IMonoAlphabeticSettings! settings) -> void
Useful.Security.Cryptography.MonoAlphabeticSettingsViewModel.PropertyChanged -> System.ComponentModel.PropertyChangedEventHandler?
Useful.Security.Cryptography.MonoAlphabeticSettingsViewModel.SubstitutionCount.get -> int
Useful.Security.Cryptography.MonoAlphabeticSettingsViewModel.Substitutions.get -> string!
Useful.Security.Cryptography.MonoAlphabeticSettingsViewModel.this[char substitution].get -> char
Useful.Security.Cryptography.MonoAlphabeticSettingsViewModel.this[char substitution].set -> void
Useful.Security.Cryptography.UI.Controllers.CipherController
Useful.Security.Cryptography.UI.Controllers.CipherController.CipherController(Useful.IRepository<Useful.Security.Cryptography.ICipher!>! repository, Useful.Security.Cryptography.UI.Views.ICipherView! cipherView) -> void
Useful.Security.Cryptography.UI.Controllers.CipherController.Decrypt(string! ciphertext) -> void
Useful.Security.Cryptography.UI.Controllers.CipherController.Encrypt(string! plaintext) -> void
Useful.Security.Cryptography.UI.Controllers.CipherController.GetCiphers() -> System.Collections.Generic.IEnumerable<Useful.Security.Cryptography.ICipher!>!
Useful.Security.Cryptography.UI.Controllers.CipherController.LoadView() -> void
Useful.Security.Cryptography.UI.Controllers.CipherController.SelectCipher(Useful.Security.Cryptography.ICipher! cipher, Useful.Security.Cryptography.UI.ViewModels.ICipherSettingsViewModel! cipherSettingsObservable, Useful.Security.Cryptography.UI.Views.ICipherSettingsView! settingsView) -> void
Useful.Security.Cryptography.UI.Controllers.IController
Useful.Security.Cryptography.UI.Controllers.IController.LoadView() -> void
Useful.Security.Cryptography.UI.Controllers.ISettingsController
Useful.Security.Cryptography.UI.Controllers.ISettingsController.Settings.get -> Useful.Security.Cryptography.UI.ViewModels.ICipherSettingsViewModel!
Useful.Security.Cryptography.UI.Controllers.SettingsController
Useful.Security.Cryptography.UI.Controllers.SettingsController.LoadView() -> void
Useful.Security.Cryptography.UI.Controllers.SettingsController.Settings.get -> Useful.Security.Cryptography.UI.ViewModels.ICipherSettingsViewModel!
Useful.Security.Cryptography.UI.Controllers.SettingsController.SettingsController(Useful.Security.Cryptography.UI.ViewModels.ICipherSettingsViewModel! cipherSettingsObservable, Useful.Security.Cryptography.UI.Views.ICipherSettingsView! cipherSettingsView) -> void
Useful.Security.Cryptography.UI.Models.CipherModel
Useful.Security.Cryptography.UI.Models.CipherModel.CipherModel() -> void
Useful.Security.Cryptography.UI.Models.CipherModel.Ciphertext.get -> string!
Useful.Security.Cryptography.UI.Models.CipherModel.Ciphertext.set -> void
Useful.Security.Cryptography.UI.Models.CipherModel.CurrentCipherName.get -> string!
Useful.Security.Cryptography.UI.Models.CipherModel.CurrentCipherName.set -> void
Useful.Security.Cryptography.UI.Models.CipherModel.Plaintext.get -> string!
Useful.Security.Cryptography.UI.Models.CipherModel.Plaintext.set -> void
Useful.Security.Cryptography.UI.Services.CipherService
Useful.Security.Cryptography.UI.Services.CipherService.CipherService(Useful.IRepository<Useful.Security.Cryptography.ICipher!>! repository) -> void
Useful.Security.Cryptography.UI.Services.CipherService.Decrypt(string! ciphertext) -> string!
Useful.Security.Cryptography.UI.Services.CipherService.Encrypt(string! plaintext) -> string!
Useful.Security.Cryptography.UI.Services.CipherService.Repository.get -> Useful.IRepository<Useful.Security.Cryptography.ICipher!>!
Useful.Security.Cryptography.UI.Services.CipherService.Repository.set -> void
Useful.Security.Cryptography.UI.ViewModels.AtbashViewModel
Useful.Security.Cryptography.UI.ViewModels.AtbashViewModel.AtbashViewModel() -> void
Useful.Security.Cryptography.UI.ViewModels.AtbashViewModel.CipherName.get -> string!
Useful.Security.Cryptography.UI.ViewModels.AtbashViewModel.Ciphertext.get -> string!
Useful.Security.Cryptography.UI.ViewModels.AtbashViewModel.Ciphertext.set -> void
Useful.Security.Cryptography.UI.ViewModels.AtbashViewModel.Decrypt() -> void
Useful.Security.Cryptography.UI.ViewModels.AtbashViewModel.Encrypt() -> void
Useful.Security.Cryptography.UI.ViewModels.AtbashViewModel.Plaintext.get -> string!
Useful.Security.Cryptography.UI.ViewModels.AtbashViewModel.Plaintext.set -> void
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel.CaesarViewModel() -> void
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel.CipherName.get -> string!
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel.Ciphertext.get -> string!
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel.Ciphertext.set -> void
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel.Decrypt() -> void
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel.Encrypt() -> void
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel.Plaintext.get -> string!
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel.Plaintext.set -> void
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel.Randomize() -> void
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel.SelectedShift.get -> int
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel.SelectedShift.set -> void
Useful.Security.Cryptography.UI.ViewModels.CaesarViewModel.Shifts.get -> System.Collections.Generic.IEnumerable<int>!
Useful.Security.Cryptography.UI.ViewModels.EmptySettingsViewModel
Useful.Security.Cryptography.UI.ViewModels.EmptySettingsViewModel.EmptySettingsViewModel() -> void
Useful.Security.Cryptography.UI.ViewModels.ICipherSettingsViewModel
Useful.Security.Cryptography.UI.ViewModels.ViewModelBase
Useful.Security.Cryptography.UI.ViewModels.ViewModelBase.NotifyPropertyChanged(string! propertyName = "") -> void
Useful.Security.Cryptography.UI.ViewModels.ViewModelBase.PropertyChanged -> System.ComponentModel.PropertyChangedEventHandler?
Useful.Security.Cryptography.UI.ViewModels.ViewModelBase.ViewModelBase() -> void
Useful.Security.Cryptography.UI.Views.ICipherSettingsView
Useful.Security.Cryptography.UI.Views.ICipherView
Useful.Security.Cryptography.UI.Views.ICipherView.ShowCiphertext(string! ciphertext) -> void
Useful.Security.Cryptography.UI.Views.ICipherView.ShowPlaintext(string! plaintext) -> void
Useful.Security.Cryptography.UI.Views.ICipherView.ShowSettings(Useful.Security.Cryptography.UI.Views.ICipherSettingsView! settingsView) -> void
Useful.Security.Cryptography.UI.Views.IDisposableCipherView
Useful.Security.Cryptography.UI.Views.IView
Useful.Security.Cryptography.UI.Views.IView.Initialize() -> void
Useful.Security.Cryptography.UI.Views.IView.SetController(Useful.Security.Cryptography.UI.Controllers.IController! controller) -> void
